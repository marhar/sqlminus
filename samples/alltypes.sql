------------------------------------------------------------------------
--+ alltypes -- autogenerated package named alltypes
------------------------------------------------------------------------

create or replace package alltypes
as
    --------------------------------------------------------------------
    --+ p3_varchar2 -- test the type varchar2
    --+ parameters:
    --+   x_varchar2_in : in parameter of type varchar2
    --+   x_varchar2_out : out parameter of type varchar2
    --+   x_varchar2_inout : inout parameter of type varchar2
    --------------------------------------------------------------------
    procedure p3_varchar2(
        x_varchar2_in in varchar2,
        x_varchar2_out out varchar2,
        x_varchar2_inout in out varchar2
    );
    --------------------------------------------------------------------
    --+ p3_number -- test the type number
    --+ parameters:
    --+   x_number_in : in parameter of type number
    --+   x_number_out : out parameter of type number
    --+   x_number_inout : inout parameter of type number
    --------------------------------------------------------------------
    procedure p3_number(
        x_number_in in number,
        x_number_out out number,
        x_number_inout in out number
    );
    --------------------------------------------------------------------
    --+ p3_date -- test the type date
    --+ parameters:
    --+   x_date_in : in parameter of type date
    --+   x_date_out : out parameter of type date
    --+   x_date_inout : inout parameter of type date
    --------------------------------------------------------------------
    procedure p3_date(
        x_date_in in date,
        x_date_out out date,
        x_date_inout in out date
    );
    --------------------------------------------------------------------
    --+ p3_float -- test the type float
    --+ parameters:
    --+   x_float_in : in parameter of type float
    --+   x_float_out : out parameter of type float
    --+   x_float_inout : inout parameter of type float
    --------------------------------------------------------------------
    procedure p3_float(
        x_float_in in float,
        x_float_out out float,
        x_float_inout in out float
    );
    --------------------------------------------------------------------
    --+ p3_timestamp -- test the type timestamp
    --+ parameters:
    --+   x_timestamp_in : in parameter of type timestamp
    --+   x_timestamp_out : out parameter of type timestamp
    --+   x_timestamp_inout : inout parameter of type timestamp
    --------------------------------------------------------------------
    procedure p3_timestamp(
        x_timestamp_in in timestamp,
        x_timestamp_out out timestamp,
        x_timestamp_inout in out timestamp
    );
    --------------------------------------------------------------------
    --+ f_varchar2 -- test the type varchar2
    --+ parameters:
    --+   x_varchar2_in : in parameter of type varchar2
    --+   x_varchar2_out : out parameter of type varchar2
    --+   x_varchar2_inout : inout parameter of type varchar2
    --+ returns:
    --+   a value of type varchar2
    --------------------------------------------------------------------
    function f_varchar2(
        x_varchar2_in in varchar2,
        x_varchar2_out out varchar2,
        x_varchar2_inout in out varchar2
    ) return varchar2;
    --------------------------------------------------------------------
    --+ f_number -- test the type number
    --+ parameters:
    --+   x_number_in : in parameter of type number
    --+   x_number_out : out parameter of type number
    --+   x_number_inout : inout parameter of type number
    --+ returns:
    --+   a value of type number
    --------------------------------------------------------------------
    function f_number(
        x_number_in in number,
        x_number_out out number,
        x_number_inout in out number
    ) return number;
    --------------------------------------------------------------------
    --+ f_date -- test the type date
    --+ parameters:
    --+   x_date_in : in parameter of type date
    --+   x_date_out : out parameter of type date
    --+   x_date_inout : inout parameter of type date
    --+ returns:
    --+   a value of type date
    --------------------------------------------------------------------
    function f_date(
        x_date_in in date,
        x_date_out out date,
        x_date_inout in out date
    ) return date;
    --------------------------------------------------------------------
    --+ f_float -- test the type float
    --+ parameters:
    --+   x_float_in : in parameter of type float
    --+   x_float_out : out parameter of type float
    --+   x_float_inout : inout parameter of type float
    --+ returns:
    --+   a value of type float
    --------------------------------------------------------------------
    function f_float(
        x_float_in in float,
        x_float_out out float,
        x_float_inout in out float
    ) return float;
    --------------------------------------------------------------------
    --+ f_timestamp -- test the type timestamp
    --+ parameters:
    --+   x_timestamp_in : in parameter of type timestamp
    --+   x_timestamp_out : out parameter of type timestamp
    --+   x_timestamp_inout : inout parameter of type timestamp
    --+ returns:
    --+   a value of type timestamp
    --------------------------------------------------------------------
    function f_timestamp(
        x_timestamp_in in timestamp,
        x_timestamp_out out timestamp,
        x_timestamp_inout in out timestamp
    ) return timestamp;
    --------------------------------------------------------------------
    --+ p_noparms -- test a proc with no parameters
    --+ parameters:
    --+   none
    --------------------------------------------------------------------
    procedure p_noparms;

    --------------------------------------------------------------------
    --+ f_noparms -- test a function with no parameters
    --+ parameters:
    --+   none
    --------------------------------------------------------------------
    function f_noparms return number;

end alltypes;
/
create or replace package body alltypes
as
    --------------------------------------------------------------------
    procedure p3_varchar2(
        x_varchar2_in in varchar2,
        x_varchar2_out out varchar2,
        x_varchar2_inout in out varchar2
    )
    is
    begin
        dbms_output.put_line('p3_varchar2: ' ||
            to_char(x_varchar2_in)||' '||
            to_char(x_varchar2_out)||' '||
            to_char(x_varchar2_inout));
        x_varchar2_out := x_varchar2_in;
        x_varchar2_inout := x_varchar2_in;
        dbms_output.put_line('p3_varchar2: ' ||
            to_char(x_varchar2_in)||' '||
            to_char(x_varchar2_out)||' '||
            to_char(x_varchar2_inout));
    end p3_varchar2;
    --------------------------------------------------------------------
    procedure p3_number(
        x_number_in in number,
        x_number_out out number,
        x_number_inout in out number
    )
    is
    begin
        dbms_output.put_line('p3_number: ' ||
            to_char(x_number_in)||' '||
            to_char(x_number_out)||' '||
            to_char(x_number_inout));
        x_number_out := x_number_in;
        x_number_inout := x_number_in;
        dbms_output.put_line('p3_number: ' ||
            to_char(x_number_in)||' '||
            to_char(x_number_out)||' '||
            to_char(x_number_inout));
    end p3_number;
    --------------------------------------------------------------------
    procedure p3_date(
        x_date_in in date,
        x_date_out out date,
        x_date_inout in out date
    )
    is
    begin
        dbms_output.put_line('p3_date: ' ||
            to_char(x_date_in)||' '||
            to_char(x_date_out)||' '||
            to_char(x_date_inout));
        x_date_out := x_date_in;
        x_date_inout := x_date_in;
        dbms_output.put_line('p3_date: ' ||
            to_char(x_date_in)||' '||
            to_char(x_date_out)||' '||
            to_char(x_date_inout));
    end p3_date;
    --------------------------------------------------------------------
    procedure p3_float(
        x_float_in in float,
        x_float_out out float,
        x_float_inout in out float
    )
    is
    begin
        dbms_output.put_line('p3_float: ' ||
            to_char(x_float_in)||' '||
            to_char(x_float_out)||' '||
            to_char(x_float_inout));
        x_float_out := x_float_in;
        x_float_inout := x_float_in;
        dbms_output.put_line('p3_float: ' ||
            to_char(x_float_in)||' '||
            to_char(x_float_out)||' '||
            to_char(x_float_inout));
    end p3_float;
    --------------------------------------------------------------------
    procedure p3_timestamp(
        x_timestamp_in in timestamp,
        x_timestamp_out out timestamp,
        x_timestamp_inout in out timestamp
    )
    is
    begin
        dbms_output.put_line('p3_timestamp: ' ||
            to_char(x_timestamp_in)||' '||
            to_char(x_timestamp_out)||' '||
            to_char(x_timestamp_inout));
        x_timestamp_out := x_timestamp_in;
        x_timestamp_inout := x_timestamp_in;
        dbms_output.put_line('p3_timestamp: ' ||
            to_char(x_timestamp_in)||' '||
            to_char(x_timestamp_out)||' '||
            to_char(x_timestamp_inout));
    end p3_timestamp;
    --------------------------------------------------------------------
    function f_varchar2(
        x_varchar2_in in varchar2,
        x_varchar2_out out varchar2,
        x_varchar2_inout in out varchar2
    )
    return varchar2
    is
    begin
        dbms_output.put_line('p3_varchar2: ' ||
            to_char(x_varchar2_in)||' '||
            to_char(x_varchar2_out)||' '||
            to_char(x_varchar2_inout));
        x_varchar2_out := x_varchar2_in;
        dbms_output.put_line('p3_varchar2: ' ||
            to_char(x_varchar2_in)||' '||
            to_char(x_varchar2_out)||' '||
            to_char(x_varchar2_inout));
        return x_varchar2_in;
    end f_varchar2;
    --------------------------------------------------------------------
    function f_number(
        x_number_in in number,
        x_number_out out number,
        x_number_inout in out number
    )
    return number
    is
    begin
        dbms_output.put_line('p3_number: ' ||
            to_char(x_number_in)||' '||
            to_char(x_number_out)||' '||
            to_char(x_number_inout));
        x_number_out := x_number_in;
        dbms_output.put_line('p3_number: ' ||
            to_char(x_number_in)||' '||
            to_char(x_number_out)||' '||
            to_char(x_number_inout));
        return x_number_in;
    end f_number;
    --------------------------------------------------------------------
    function f_date(
        x_date_in in date,
        x_date_out out date,
        x_date_inout in out date
    )
    return date
    is
    begin
        dbms_output.put_line('p3_date: ' ||
            to_char(x_date_in)||' '||
            to_char(x_date_out)||' '||
            to_char(x_date_inout));
        x_date_out := x_date_in;
        dbms_output.put_line('p3_date: ' ||
            to_char(x_date_in)||' '||
            to_char(x_date_out)||' '||
            to_char(x_date_inout));
        return x_date_in;
    end f_date;
    --------------------------------------------------------------------
    function f_float(
        x_float_in in float,
        x_float_out out float,
        x_float_inout in out float
    )
    return float
    is
    begin
        dbms_output.put_line('p3_float: ' ||
            to_char(x_float_in)||' '||
            to_char(x_float_out)||' '||
            to_char(x_float_inout));
        x_float_out := x_float_in;
        dbms_output.put_line('p3_float: ' ||
            to_char(x_float_in)||' '||
            to_char(x_float_out)||' '||
            to_char(x_float_inout));
        return x_float_in;
    end f_float;
    --------------------------------------------------------------------
    function f_timestamp(
        x_timestamp_in in timestamp,
        x_timestamp_out out timestamp,
        x_timestamp_inout in out timestamp
    )
    return timestamp
    is
    begin
        dbms_output.put_line('p3_timestamp: ' ||
            to_char(x_timestamp_in)||' '||
            to_char(x_timestamp_out)||' '||
            to_char(x_timestamp_inout));
        x_timestamp_out := x_timestamp_in;
        dbms_output.put_line('p3_timestamp: ' ||
            to_char(x_timestamp_in)||' '||
            to_char(x_timestamp_out)||' '||
            to_char(x_timestamp_inout));
        return x_timestamp_in;
    end f_timestamp;
    --------------------------------------------------------------------
    procedure p_noparms
    is
    begin
        dbms_output.put_line('p_noparms:');
    end p_noparms;

    --------------------------------------------------------------------
    function f_noparms
    return number
    is
    begin
        dbms_output.put_line('f_noparms:');
        return NULL;
    end f_noparms;

    --------------------------------------------------------------------
    procedure p_private
    is
    begin
        dbms_output.put_line('p_private:');
    end p_private;
end alltypes;
/
