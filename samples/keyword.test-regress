
------------------------------------------------------------------------
connect to the database
------------------------------------------------------------------------

------------------------------------------------------------------------
instantiate a keyword object see its methods
------------------------------------------------------------------------
['__doc__',
 '__init__',
 '__module__',
 'add',
 'add_V',
 'all_words',
 'all_words_L',
 'autocommit',
 'curs',
 'delet',
 'delet_V',
 'get_ids',
 'get_ids_V',
 'get_keywords',
 'get_keywords2',
 'get_keywords2_L',
 'get_keywords_V']

------------------------------------------------------------------------
autogenerated doc string
------------------------------------------------------------------------

    class Keyword -- interface for package APIDEMO_ADM.KEYWORD

    *** This is a generated class. DO NOT MODIFY! ***

    package keyword -- process asset keywords

    This package associates keywords with asset ids.  An asset
    may have zero or more keywords.  It is not an error
    to re-add a keyword that already exists, this condition
    will be handled gracefully by the insertion code.[*]

    Note: keywords can currently be stored with embedded spaces.
    Is this a good idea?  If not, we will add a check for this
    in future versions of this interface, and enforce via a
    table constraint.  If it is a good idea, we will have
    the searching functions search in a manner that treats all
    whitespace sequences to be identical.

    [*] this is not the case if you are directly
        performing an insert on the table.
    

------------------------------------------------------------------------
autogenerated doc string for a method
------------------------------------------------------------------------

        add a keyword to an asset
        aid       : asset identifier
        akeyword  : keyword to add
        

------------------------------------------------------------------------
add a keyword
------------------------------------------------------------------------
[22, 'blue']

------------------------------------------------------------------------
add some keywords using the vectorizing procedure
------------------------------------------------------------------------

------------------------------------------------------------------------
list all the keywords
------------------------------------------------------------------------
black
blue
orange
violet
white

------------------------------------------------------------------------
list all the keywords, list consing version (good for xml-rpc, app server
------------------------------------------------------------------------
[('black',), ('blue',), ('orange',), ('violet',), ('white',)]

------------------------------------------------------------------------
list the keywords for asset 22
------------------------------------------------------------------------
blue
violet

------------------------------------------------------------------------
delete a keyword
------------------------------------------------------------------------
[22, 'red']

------------------------------------------------------------------------
call an application specific api
------------------------------------------------------------------------
['Black', 'Blue', 'Orange', 'Violet', 'White']

------------------------------------------------------------------------
escape to sql
------------------------------------------------------------------------
(2,)
